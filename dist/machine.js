"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.candyMachineStatechart = exports.Event = void 0;
const xstate_1 = require("xstate");
var State;
(function (State) {
    State["NO_COIN"] = "NO_COIN";
    State["INVALID_COIN"] = "INVALID_COIN";
    State["VALID_COIN"] = "VALID_COIN";
    State["NO_CANDY_DISPENSED"] = "NO_CANDY_DISPENSED";
    State["CANDY_DISPENSED"] = "CANDY_DISPENSED";
    State["SHUTDOWN"] = "SHUTDOWN";
})(State || (State = {}));
var Event;
(function (Event) {
    Event["HALF_TURN"] = "HALF_TURN";
    Event["ADD_VALID_COIN"] = "ADD_VALID_COIN";
    Event["ADD_INVALID_COIN"] = "ADD_INVALID_COIN";
    Event["REMOVE_COIN"] = "REMOVE_COIN";
    Event["SHUTDOWN"] = "SHUTDOWN";
})(Event || (exports.Event = Event = {}));
var Action;
(function (Action) {
    Action["DISPENSE_CANDY"] = "DISPENSE_CANDY";
    Action["RECORD_COIN"] = "RECORD_COIN";
    Action["RECORD_SALE"] = "RECORD_SALE";
    Action["LOG_SALES"] = "LOG_SALES";
    Action["SHUTTING_DOWN"] = "SHUTTING_DOWN";
    Action["INVALID_ACTION"] = "INVALID_ACTION";
})(Action || (Action = {}));
var CandyColour;
(function (CandyColour) {
    CandyColour["RED"] = "red";
    CandyColour["GREEN"] = "green";
    CandyColour["BLUE"] = "blue";
})(CandyColour || (CandyColour = {}));
var CandyQuality;
(function (CandyQuality) {
    CandyQuality["GREAT"] = "tasty";
    CandyQuality["REGULAR"] = "basic";
    CandyQuality["DISGUSTING"] = "disgusting";
})(CandyQuality || (CandyQuality = {}));
const candyMachineSchema = {
    context: {},
    events: {},
};
const candyMachineStates = {
    [State.NO_COIN]: {
        on: {
            [Event.HALF_TURN]: State.NO_CANDY_DISPENSED,
            [Event.ADD_VALID_COIN]: {
                target: State.VALID_COIN,
                actions: Action.RECORD_COIN,
            },
            [Event.ADD_INVALID_COIN]: State.INVALID_COIN,
            [Event.SHUTDOWN]: State.SHUTDOWN,
        },
    },
    [State.INVALID_COIN]: {
        on: {
            [Event.REMOVE_COIN]: State.NO_COIN,
            '*': {
                actions: Action.INVALID_ACTION,
            },
        },
    },
    [State.VALID_COIN]: {
        on: {
            [Event.HALF_TURN]: {
                target: State.CANDY_DISPENSED,
                actions: [Action.DISPENSE_CANDY, Action.RECORD_SALE],
            },
            [Event.REMOVE_COIN]: State.NO_COIN,
        },
    },
    [State.NO_CANDY_DISPENSED]: {
        on: { [Event.HALF_TURN]: State.NO_COIN },
    },
    [State.CANDY_DISPENSED]: {
        on: { [Event.HALF_TURN]: State.NO_COIN },
    },
    [State.SHUTDOWN]: {
        type: 'final',
        entry: [Action.LOG_SALES, Action.SHUTTING_DOWN],
    },
};
const candyMachineActions = {
    [Action.RECORD_COIN]: (0, xstate_1.assign)({
        currentCoinValue: (context, event) => {
            switch (event.type) {
                case Event.ADD_VALID_COIN:
                    return context.currentCoinValue + event.value;
                default:
                    return context.currentCoinValue;
            }
        },
    }),
    [Action.RECORD_SALE]: (0, xstate_1.assign)({
        currentCoinValue: () => 0,
        totalValue: (context) => context.totalValue + context.currentCoinValue,
        numSales: (context) => context.numSales + 1,
    }),
    [Action.DISPENSE_CANDY]: () => {
        const randColourNum = Math.random() * 3;
        const randQualityNum = Math.random() * 3;
        const candyColour = randColourNum < 1
            ? CandyColour.RED
            : randColourNum < 2
                ? CandyColour.GREEN
                : CandyColour.BLUE;
        const candyQuality = randQualityNum < 1
            ? CandyQuality.DISGUSTING
            : randColourNum < 2
                ? CandyQuality.GREAT
                : CandyQuality.REGULAR;
        console.log(`A ${candyQuality} ${candyColour} candy has been dispensed, enjoy!`);
    },
    [Action.SHUTTING_DOWN]: () => console.log('--- Candy machine is shutting down for the day ---'),
    [Action.LOG_SALES]: (context) => console.log(`Day's sales: $${(context.totalValue / 100).toFixed(2)} earned from ${context.numSales} sales. Last sale dated ${context.lastDispensedAt}`),
    [Action.INVALID_ACTION]: (_, event) => {
        throw new Error(`Invalid event ${event.type}`);
    },
};
exports.candyMachineStatechart = (0, xstate_1.createMachine)({
    predictableActionArguments: true,
    initial: State.NO_COIN,
    states: candyMachineStates,
    schema: candyMachineSchema,
    context: {
        currentCoinValue: 0,
        totalValue: 0,
        numSales: 0,
        lastDispensedAt: new Date(),
    },
    entry: [() => console.log('--- Candy machine is open for business ---')],
}, { actions: candyMachineActions });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFjaGluZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9tYWNoaW5lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLG1DQU9nQjtBQUVoQixJQUFLLEtBT0o7QUFQRCxXQUFLLEtBQUs7SUFDUiw0QkFBbUIsQ0FBQTtJQUNuQixzQ0FBNkIsQ0FBQTtJQUM3QixrQ0FBeUIsQ0FBQTtJQUN6QixrREFBeUMsQ0FBQTtJQUN6Qyw0Q0FBbUMsQ0FBQTtJQUNuQyw4QkFBcUIsQ0FBQTtBQUN2QixDQUFDLEVBUEksS0FBSyxLQUFMLEtBQUssUUFPVDtBQUVELElBQVksS0FNWDtBQU5ELFdBQVksS0FBSztJQUNmLGdDQUF1QixDQUFBO0lBQ3ZCLDBDQUFpQyxDQUFBO0lBQ2pDLDhDQUFxQyxDQUFBO0lBQ3JDLG9DQUEyQixDQUFBO0lBQzNCLDhCQUFxQixDQUFBO0FBQ3ZCLENBQUMsRUFOVyxLQUFLLHFCQUFMLEtBQUssUUFNaEI7QUFFRCxJQUFLLE1BUUo7QUFSRCxXQUFLLE1BQU07SUFDVCwyQ0FBaUMsQ0FBQTtJQUNqQyxxQ0FBMkIsQ0FBQTtJQUMzQixxQ0FBMkIsQ0FBQTtJQUMzQixpQ0FBdUIsQ0FBQTtJQUN2Qix5Q0FBK0IsQ0FBQTtJQUUvQiwyQ0FBaUMsQ0FBQTtBQUNuQyxDQUFDLEVBUkksTUFBTSxLQUFOLE1BQU0sUUFRVjtBQUVELElBQUssV0FJSjtBQUpELFdBQUssV0FBVztJQUNkLDBCQUFXLENBQUE7SUFDWCw4QkFBZSxDQUFBO0lBQ2YsNEJBQWEsQ0FBQTtBQUNmLENBQUMsRUFKSSxXQUFXLEtBQVgsV0FBVyxRQUlmO0FBRUQsSUFBSyxZQUlKO0FBSkQsV0FBSyxZQUFZO0lBQ2YsK0JBQWUsQ0FBQTtJQUNmLGlDQUFpQixDQUFBO0lBQ2pCLHlDQUF5QixDQUFBO0FBQzNCLENBQUMsRUFKSSxZQUFZLEtBQVosWUFBWSxRQUloQjtBQWlCRCxNQUFNLGtCQUFrQixHQUEyRDtJQUNqRixPQUFPLEVBQUUsRUFBeUI7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